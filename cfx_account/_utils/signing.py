from typing import (
    Tuple,
)
from cfx_utils.types import (
    TxDict
)
from eth_keys.datatypes import (
    PrivateKey
)

from .transactions import (
    encode_transaction,
    serializable_unsigned_transaction_from_dict,
    encode_transaction_post_quantum,
)

from cfx_utils.token_unit import (
    to_int_if_drip_units,
)

import binascii

from .account_ffi import Pffi

import array
import rlp

secret_key_hex = "282594a193073feb591c24d853c7f4caedb4d04cb06cdc8fa5c794a3e0c1165cc91caedea3f031c40a638875151d07e0fb62092c8b79518696c94300210568b17c83ed29cf683fa4993bd8ded48ad90a974903d40b766a26ececa24823d1e481c2f491864dce99a16ac7de078c0af839c90852089750d4c425439000e030211146324a060da1122614396edbb28c19b76518913149a8400827208130525a168c192448ca4841cb082908b540198864ca386200a4408c020988b428581246c3a86551c491643672243051c846401a94301b9388c2906c10b2248c929194204e4b18325ba245e3048a099309d3c020dc226984c625c1a62812983020c5619a964d1002329c2011e0824164b450c4266402c04811048222b94958b84c0b823001b06c4a942018108d0ab34018164c90044e541664528605cb860143404020a0718ab46849b6695c14480ab6618a222c89b62913a16108491201392411056a5a287210c64d113248e0402584462e13306c14114ae1442ec1128958886dd2a26918428a4ba6891c04605ac0841a44064cb645c39625803824d944220280704a282a22858508118248422241860d6200058386441aa571a3186d11820c62b6418322320a12642388041205684cc230c1888ce4126554c428194912888089e0200e21a94893b02953c6045416411c1012090451212171112191d406629ca42d14370dd0026512424062a03093408444304ea4b6315b804910a444c90486a43462dcc811e4b6652248494406480c9805da20098a304a19102659944c13b25142240dd9326a8b240988a88403c4280ca445c2324208042914a51050148102191012320502274194c871188924114545c0826d48a6641b336021c0841b478e1bc46522232cc438925836920494609b440a63c064ca308cc1844da3080e1c23121b348c82406e23a029e30482580000e214695234424ac26023b088d3a0100a2570dc922c09486ac1184acb066008c76162269242302e0324204304211c84694a206e18974109188623c34122b48452186c1aa384c2c64964142581162a1114681aa9900831201c18240cb1089a4430db202e1432059c003223274209c7805912115228026132715a3228e01468db163009212e5888411b053001954d54281299086248c00d40c400c0b649d324101b249091244de030241b458118c00951862824244104322d58a6081a2424d0386cd392659b3406e34540c944d5be9bedf8a3e4000af25be15a401c86b564c59dd157a48e3c7a56abcd4410b633c7e1c64b5192cdafc53ef1179ab6b36d4d92c9c1ce5508a187e240c889ee909f8e09ebaa77feb92a9e49473bd4a469095c0e80a1827b06c50ec181a4603e2c1265044809f4a3595444eed1327a7525d000ec36adca3a70abeaf3fc6e9ffab8f75de5b76189b4a1830ced734938a350bc35451e6f27f552110441817448f7e4a60ca5a81552b63f06c53bd085f2dfd88c3997889315b020b0b3b2312e0819e1b6946849d853531ff489fa4b8f59ac2a67fbe35d967e6346ff565719a0e7eb42f8fd4efa5aa34eaaaa25a3896af092af407b007767e5be7b8ea4d3d2c7447425b903e853320e67a7436a281c920f6325691f75eb3f2a1f0028d5e12cda2bb15c5be0f0e48a6561f143865cb2c0a5c1ca883934b4e313e99dd7849a1a34fb9e2e7ebc566d7f0dc7c66aba97c2f0452ac10e0024281d45d2951ec4ec6912709edff43a478235dbda0bb939ba0c6271dc75274b5336ce535d230e8af92d6623262df5859785ded79b20c52098ec3c73eaea779bf7c63a84d3ce52a893ee220d08bfca85597fcc8a42102a296635879a7d42d1b7f70403a0cec0812e1ab1dd90c1a1d976acf24566b6cafa8ec83a21367d4db4adf22a1c845d3db1f35fe0aa4cfcd888d28b0bb05d74e6cb41ff5e7e0245ad1ba044d87250efef3a0ac8f39b8d5ece6aa94f8171013ea2c81c592e4b8a20489837527f501e294da0eb5f782caf5de73daeed672af6549f97df84f16e866ade3c686e9bbc4f1212dc9eb0a784656b70508bc174dc204610ff64a7525d79f6f7f0e8fbc152334860fefefbb9cb9400b81b20c36ffa9b32e869538cd5f435b3cb66f47e0bf1696e3b961f049a7e76b6a66fc7839d07fe2af150d4b67ec30d2f65788ed41556def9240118ae70af5d88cff27dda56e21e166c5b2aaef57dd5033378715b5408214e008b6f29b9f8302b886d949c589e5a4ad5cfcf2e03ff64a9c6f20e14ad6641a9122ece139ab2115c14de2d551123833e4cb5fca502e826b8f4ed6e1e39189c2d89cc97e98a407c6d0288c2d105e7013dd9d109d1b5a15fe0203b531fb85e3683954c1064f8e6b0c19e6705c6d2dffafab63cb5b9a7b9e5b67f7b6372f85738924848c6730df3c793c4e4fe816f5e2a30b8a00723e8c417f74f68468e4d672ee50e87499c0aaefcd707ad0cd102998c6d9c794619c7889cb1b30f4b7df586bae9c48eb218529042cfe626727c91c50c6c9a2396b8efaf301a7295ed8c4500abf7f9040a9abcd866ddcf3c0f343f8f7ef6812e6fc16c87b4e51413d1d2452917f0dfa0049d241b631ef8fe16e6e5247fa3d0c59dcb045d71383f1302d25a3eb492af562a3c2594b3084f1ff4983bc95a92da249305dde7d27dc9e73989590dc2180417f76432594cf535506a5e845df9a13b1bcf13e945368d2ea633694c4890e955d6a8be9cfbf16d2e8f977c9d91b026dfbf50a2b72ca0eb06538f98aed5a3b64f86353bcd59ed9caa6b64a3ceb298de4f5280f4ccea8e7c2999ae2ca1eb433f313ef148bc39195bafd55a5604c4cdf2320a3b247d9c6cc0698700066e0f81c579633fb1cc714c207f12ffa4f4c89baa5110e31ca1770b41e02954c0331b876694bbfac474c246ad8342371c3dba75840df31c5cf0e5877b2bab14008c4b421982551d6aee8365747df44db3447a3ac0da2ab9179b6c83e09d6d9dcb7dc814959d49b3922b919931e3277f62493433a12495ce5ed532b9bdf67375aff3492c1a173e0b2e720313593076c3e8373b52717a95cce5e3344a228fe3c0af3fce93fb27b2844689a79e5d48e049e473c4159b51cdd743f763d5ae55d96cf2ee4498e1200f35b0d90dc74a338cea4a9de55f5221e9df9ca1872ea9f3c7991957ac0091a4f09dc1f25360235a2cb38486d84d86a846bda4cf8969879fe17318d6176a97e730280b63c44f82f59cdf7341907ea6ac4b5d9dee23ffb9db37b37c3e0c57b49eed730024ace8f418647a0cb6939c930c503f8f1ef6a0fc42ed93487bfca369a4f4e19a9f9d0790af1080e031924c933e3431d7e8374a9d50c3689a68c42d128e59a50768175e1beaea788d94e4501eba58ba6c02c6f8cc356c01add680ae7a0b270e476d4cf16d109c9e5a5bee18ec0f9194f1fbdfac3108b5b8dfdb2a61fb57944eafc3ca80a7593a389c2246904c309a1a2319ea84e3111579cb456759a278909a0788e62664fbec74dff505b8608044a374b43a777d9e90d99277c755ecfce9179fe55b18a04af2dcf32b0c7e7788e81bec31c60428567e24b266e33ed77f34ced5"  
public_key_hex = "282594a193073feb591c24d853c7f4caedb4d04cb06cdc8fa5c794a3e0c1165c64be49be9ff8ae5e7799921cf613f05b5719463498225c833a3f537200329a72aa54d71453b8f65a616bce222301118301f6bae4d1308d7fa3ac6ec698e87092e9c84d7a076e012ae11688d7a6b25edd4f75ccaa0ce0e00b6e124603274b18af24ed0dbd96091fafe62b901c8df7563faf0b73dbd7e38e5e28149168de1a3923be20ce8277671c1480929caba70ea4b4aa45c7b60505d51497d755629b904404bfe1ad56e7b5b5a41e9f87777982ebe770a4269f04445cba9097134271cac1da8fcad6a27f4fdddd2ab6c1d259839188d5df1a10ec40d086b018c8dc7848382f7743a323f179c6e1b1c5f0976d1eaff085d017cf1ed3e2a11bcab32fb6c575a2d0f6c62581baf277d1bd48bbb854e286ffba7ee58e6fd431916b1e77eb9d9d426dc0c5ee60fa1a384ee8a17edaa44720e30f37e8cef8f4be67e1866c386fed841bda5ca2ec34fcc11b1f80536721d5a70355c57057812bb94fd145fe1333c9ee790e478add97c1121d20f5235b6375a48775353c7aaf4cd340986fcbf127c419c2ebe4e00349bee97f06b37309a05f192f3de4a639b8518a272b0367f21e3ce2b7f3dbbfb438ab87070c8591c55437755ec25dae27d396449566fc2e28f2ed3d4c767ef075f539982c38d806d70f704a27f1041d90f51ac65b19df1b91357c4355d40cc72e5c7c44a0470c8c7eee829441d3f817a405769ba0260570a4f11d0e9df2d4fdbb641775a4a199d22a1de573d179cfd9166e1f121963809fd7a16ba2c7fa980e652936b1b839d2f946cd039417d9ede89532746bc38216be140b5df6accba4eb981fffa5767fe8436bff8166855949551f6c32f57757ecf6eaec91b462406332fb408ac4d9da2a91f7e92b29d8e89b0a16ac108418d968b619d4e451d75672049743da7664cca8de510019fcef664a62f6911dc9146aca5f4cb889f8a9f54fbd8d124bcbb37544745a883b35639b5b0a470a539696d4cff2b96d24247f47a136488c9750001b403d861b2fd543bd71e7b23e551b96038316a2c7b2d4ed48343c6665baf783c217fe5b98274f86102652eeb02377a8c442a1d60aa2098b77f5c1ee0675f4ae833478dd4423efd9931ab1e7bbc373b4134d4aa85ba8de5f7f11016efc4c8fb6001b8ce71eedb6f9b859c48ce34e4fdf6d53ca4cd94ab0318a5eef8aa0502038c41f230d2e3527a43ef653e0f27525120b860fb9fc9038ea0bd2160792a98534dbc63b332f3a008882e96b3df356af9cf6fc74c1ad8ead3d5f1beecaa93f80b8862cc40be5e77279e3be66d3fc5aacde9a634855670e07785df8c0a20ab3da704dc5de13cbfd31fcb4370411614759aeadf8c69d9516a1c64730c13acac8216c6cdd3d46f4ad96e88281b8d37e9d5f0f36b82fd4ea1b1812c3ad15bd2239ab7c6a41384cd8bd6a8a60038769d4590dc3d3f985025df21ae74dd4123b5bb17ff669430188546041fc49765078d2571eeba0f47ceafdc73f59d7b02ae7262f86a753e6a84d0c112ede8eb6b7ae16737732bb5cc2860326122a3188e60d1e0303a73a55965be192e2ea47b216365259c6d62b948e389634fea1305f56e9470aa37ba598a2944f0ffe3ace5c1b91da4d0aead302d8bf8e95ee4b8131557770edd0500d51b3dc56c109d5bab8f1c0bfd71514f2a813c1ea6cd93557036d943e96c83dae32c5dcb8b65b81e6ea044b4fc852aed94a3a0b0b177f2c73d1b6497795dc84ff6d007594be50a7ea8451d44da32e36612ee1849a7c9cd37fc00834ebd6b219bd3aea8587e2df5dead52822dd01fe59e17cf12de269be"  
    
def sign_transaction_dict_post_quantum(transaction_dict: TxDict):
    transaction_dict['gasPrice'] = to_int_if_drip_units(transaction_dict['gasPrice']) # type: ignore
    transaction_dict['value'] = to_int_if_drip_units(transaction_dict['value']) # type: ignore
    # generate RLP-serializable transaction, with defaults filled
    unsigned_transaction = serializable_unsigned_transaction_from_dict(transaction_dict)

    transaction_hash = unsigned_transaction.hash()
    
    # transaction_array = array.array('B', transaction_hash).tolist()
    transaction_array = list(rlp.encode(unsigned_transaction))
    print("rlp.encode(unsigned_transaction):", list(rlp.encode(unsigned_transaction)))

    public_key_bytes = bytes.fromhex(public_key_hex)
    public_key_array = array.array('B', public_key_bytes).tolist()

    secret_key_bytes = bytes.fromhex(secret_key_hex)
    secret_key_array = array.array('B', secret_key_bytes).tolist()


    pffi = Pffi()
    ffi = pffi.get_ffi()
    rust_lib = pffi.get_rust_lib()

    transaction_array_ptr = ffi.new("uint8_t[]", transaction_array)
    secret_key_array_ptr = ffi.new("uint8_t[]", secret_key_array)
    # void pqcrystals_dilithium2_ref(uint8_t* sm, size_t smlen, const uint8_t* m, size_t mlen, uint8_t* sk);

    smlen = len(transaction_array) + pffi.CRYPTO_BYTES
    mlen = len(transaction_array)
    sklen = pffi.CRYPTO_SECRETKEYBYTES
    pklen = pffi.CRYPTO_PUBLICKEYBYTES

    smlen_ptr = ffi.new("size_t *")
    sm_buffer = ffi.new("uint8_t[]", smlen)  # sm 缓冲区
    m_buffer = ffi.new("uint8_t[]", mlen)    # m 缓冲区
    sk_buffer = ffi.new("uint8_t[]", sklen)  # sk 缓冲区

    ffi.memmove(m_buffer, transaction_array_ptr, mlen)
    ffi.memmove(sk_buffer, secret_key_array_ptr, sklen)


    rust_lib.pqcrystals_dilithium2_ref(sm_buffer, smlen_ptr, m_buffer, mlen, sk_buffer)

    sm_array = ffi.unpack(sm_buffer, smlen)
    print("sm_array:", sm_array)

    smlen_new = int(smlen_ptr[0])
    print("-------\n\n\nsmlen_new:", smlen_new)


    encoded_transaction = encode_transaction_post_quantum(unsigned_transaction, bytes(sm_array), bytes(public_key_array))

    return encoded_transaction
    # serialize transaction with rlp
    # encoded_transaction = encode_transaction(unsigned_transaction, vrs=(v, r, s))

    # return (v, r, s, encoded_transaction)

def sign_transaction_dict(eth_key: PrivateKey, transaction_dict: TxDict) -> Tuple[int, int, int, bytes]:
    transaction_dict['gasPrice'] = to_int_if_drip_units(transaction_dict['gasPrice']) # type: ignore
    transaction_dict['value'] = to_int_if_drip_units(transaction_dict['value']) # type: ignore
    # generate RLP-serializable transaction, with defaults filled
    unsigned_transaction = serializable_unsigned_transaction_from_dict(transaction_dict)

    print("transaction_dict:", transaction_dict)

    transaction_hash = unsigned_transaction.hash()

    print("transaction_hash:", transaction_hash)

    # sign with private key
    (v, r, s) = sign_transaction_hash(eth_key, transaction_hash)

    # serialize transaction with rlp 
    encoded_transaction = encode_transaction(unsigned_transaction, vrs=(v, r, s))

    return (v, r, s, encoded_transaction)

def sign_transaction_hash(key: PrivateKey, transaction_hash: bytes) -> Tuple[int, int, int]:
    signature = key.sign_msg_hash(transaction_hash)
    return signature.vrs
